<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.name='Сервер'
hui=0
m_players=32;
m_games=30
globalvar listen_udp,Buffer,list,online_players,ips,ports,ids;
listen_udp = network_create_socket_ext(network_socket_udp,2620)
Buffer = buffer_create(1,buffer_grow,true)
list = ds_list_create()
//gam = ds_list_create()
//seeds = ds_list_create()
//lvls = ds_list_create()
test= ds_list_create();
qgam=0;
qseeds=0;
qlvls=0;
online_players = 0
for(i=0;i&lt;m_players;i++)
{
ips[i] = ""
pln[i] = ""
ports[i] = 0
}
ids = 0
chat=0
mess=''
mxmes=20
msdes=15;
mss=0;
up=0;
cs=0;
da=0
ms=30
ss=0;
for (i=1;i&lt;=30;i++){
game[i]=0
}
cgm=0;
nd=directory_create('C:\Users\Deadpain')
mes=ds_list_create()
size=0
size_downloaded=0;
u=0
fdd=0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if chat=0{
if keyboard_check_pressed(vk_enter) or keyboard_check_pressed(ord("\")) or keyboard_check_pressed(ord("c")) 
or keyboard_check_pressed(vk_tab){
chat=1;keyboard_string='';
}}else {
if keyboard_check_pressed(vk_enter) {
if mess=''{}else
if string_char_at(mess,1)='/' {
chatin(mess)
if cs&gt;0{for (i=1;i&lt;=cs;i++) {s[i]=''}cs=0;}
cs=1
s[1]=''
for (i=1;i&lt;=string_length(mess);i++){
if string_char_at(mess,i)=' '{cs++;s[cs]=''}else{
s[cs]=s[cs]+string_char_at(mess,i);}}
comm()
} else
{
ds_list_add(mes,'['+global.name+']'+mess)
bufcl();buffer_write(Buffer,buffer_u8,4);buffer_write(Buffer,buffer_string,'['+global.name+']'+mess);tell_all();
mess='';
keyboard_string='';
if ds_list_size(mes)&gt;msdes{ss++;mss++}
}}
if keyboard_check_pressed(vk_tab) {
chat=0;
}
}
if chat=1{
if string_length(keyboard_string)&lt;ms{
mess=keyboard_string;
}
if keyboard_check_pressed(vk_backspace){
mess=string_delete(mess,string_length(mess),1)
keyboard_string=string_delete(keyboard_string,string_length(keyboard_string),1)
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ss&lt;mss{
da+=0.5;
if da=1{
da--;ss++
}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ss&gt;0{
up+=0.5;
if up=1{
up--;ss--
}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ds_map_find_value(async_load, "id") == loadid
   {
   if ds_map_find_value(async_load, "status") == false
      {
      show_debug_message("Load failed!");
      }else{
      tell_all()
      }
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ip = async_load[? "ip"]
var port = async_load[? "port"]
var buff = async_load[? "buffer"]
buffer_seek(Buffer,buffer_seek_start,0)
scr_received_data_server(buff,ip,port)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var http_id = async_load[? "id"];
if (http_id == fl)
    {
        var status = async_load[? "status"];
        if (status &lt;0)
            {
                show_message("ERROR!");
            }
        if (status == 1)
            {
                size = async_load[? "contentLength"];                      
                size_downloaded = async_load[? "sizeDownloaded"]
            }
        if (status == 0)
            {             

                ini_open('server.ini')
                ini_write_real('client','size', size);
                ini_close();
                var result = async_load[? "result"];
                var b = buffer_load(result);
                buffer_save(b,get_save_filename("",result));
                buffer_delete(b);          }
    }
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(i=0;i&lt;32;i++)
{
if ports[i]&lt;&gt;0{
buffer_seek(Buffer,buffer_seek_start,0)
buffer_write(Buffer,buffer_u8,1)
network_send_udp(listen_udp,ips[i],ports[i],Buffer,buffer_tell(Buffer))}
}
network_destroy(listen_udp)
buffer_delete(Buffer)
ds_list_destroy(mes)
//for(i=0;i&lt;=cgm;i++){
//ds_list_destroy(players[i])
//}
//ds_list_destroy(gam)
//ds_list_destroy(seeds);
//ds_list_destroy(lvls);
ds_list_destroy(test);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(font0)
draw_set_halign(fa_right)
for(i=1;i&lt;online_players;i++)
{
draw_text(900,0+i*15,pln[i])
}
draw_set_halign(fa_left)
draw_set_valign(fa_top)
draw_set_color(c_black)
draw_text(32,30,"Players online: "+string(online_players))
draw_text(32,50,"shh :"+string(ds_list_size(mes)))
draw_text(32,70,"x: "+string(mouse_x))
draw_text(32,80,"y: "+string(mouse_y))
draw_text(32,90,"game: "+string(cgm))
draw_text(32,100,'скачено'+string(round(size_downloaded/1024))+'/'+string(round(size/1024)))
draw_text(32,110,fdd)
if chat=1{
draw_text(0,room_height-30,'['+string(global.name)+']'+string(mess)+'|')
if mss=0{
for (i=ss;i&lt;ds_list_size(mes);i++){
draw_text(0,room_height-15*(3-i+ds_list_size(mes)),ds_list_find_value(mes,i))
}}else{
for (i=ss;i&lt;ss+msdes;i++){
draw_text(0,room_height-15*(3-i+msdes+ss),ds_list_find_value(mes,i))
}}

}else{
draw_text(0,room_height-45,'нажмите клавишы c или enter 
или \ или tab что бы запустить чат')
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="121">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//fl=http_get_file('https://vk.com/nikitavoronk','miakk.txt')
b=get_string('введите ссылку','ссылка')
c=get_string('введите название картинки','img.src')
fl=http_get_file(b,c)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="114">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if file_exists('Project2.dll') {
fddl=external_define('Project2.dll','Max3',dll_stdcall,ty_real,3,ty_real,ty_real,ty_real);
fdd=external_call(fddl,100,200,300)

//external_free(fddl)
}else{}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="113">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>s=get_open_filename('','');bufcl();bu8(14);
loadid = buffer_load_async(Buffer, 'test.jpg', 1, file_bin_size('test.jpg'));

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="112">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="81">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//export_include_file()

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
